- name: Install PyMySQL and cryptography
  ansible.builtin.pip: # This is ansible pip module. PyMySQL and cryptography are dependencies.
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: Disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install nodejs 20 and mysql
  ansible.builtin.package:
    name: "{{item}}"
    state: present
  loop:
  - nodejs
  - mysql

- name: Create expense user
  ansible.builtin.user:
    name: expense

- name: Create App Directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download the backend code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: Extract the backend code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: Install dependencies npm build tool
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy backend service # copy only works for the files without variables
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_host: "{{login_host}}"
    target: /app/schema/backend.sql
    name: all
    state: import

- name: Daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    name: backend